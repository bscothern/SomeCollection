//
// SomeCollectionConformances.swift
//
// Auto Generated
// MakeSomeCollectionLib 0.1.0
// 2020-01-11
//

extension AnyBidirectionalCollection: SequenceOfBool where Element == Bool {}
extension AnyBidirectionalCollection: CollectionOfBool where Element == Bool {}
extension AnyBidirectionalCollection: SequenceOfOptionalBool where Element == Bool? {}
extension AnyBidirectionalCollection: CollectionOfOptionalBool where Element == Bool? {}
extension AnyBidirectionalCollection: SequenceOfDouble where Element == Double {}
extension AnyBidirectionalCollection: CollectionOfDouble where Element == Double {}
extension AnyBidirectionalCollection: SequenceOfOptionalDouble where Element == Double? {}
extension AnyBidirectionalCollection: CollectionOfOptionalDouble where Element == Double? {}
extension AnyBidirectionalCollection: SequenceOfError where Element == Error {}
extension AnyBidirectionalCollection: CollectionOfError where Element == Error {}
extension AnyBidirectionalCollection: SequenceOfOptionalError where Element == Error? {}
extension AnyBidirectionalCollection: CollectionOfOptionalError where Element == Error? {}
extension AnyBidirectionalCollection: SequenceOfFloat where Element == Float {}
extension AnyBidirectionalCollection: CollectionOfFloat where Element == Float {}
extension AnyBidirectionalCollection: SequenceOfOptionalFloat where Element == Float? {}
extension AnyBidirectionalCollection: CollectionOfOptionalFloat where Element == Float? {}
extension AnyBidirectionalCollection: SequenceOfFloat80 where Element == Float80 {}
extension AnyBidirectionalCollection: CollectionOfFloat80 where Element == Float80 {}
extension AnyBidirectionalCollection: SequenceOfOptionalFloat80 where Element == Float80? {}
extension AnyBidirectionalCollection: CollectionOfOptionalFloat80 where Element == Float80? {}
extension AnyBidirectionalCollection: SequenceOfInt where Element == Int {}
extension AnyBidirectionalCollection: CollectionOfInt where Element == Int {}
extension AnyBidirectionalCollection: SequenceOfOptionalInt where Element == Int? {}
extension AnyBidirectionalCollection: CollectionOfOptionalInt where Element == Int? {}
extension AnyBidirectionalCollection: SequenceOfInt16 where Element == Int16 {}
extension AnyBidirectionalCollection: CollectionOfInt16 where Element == Int16 {}
extension AnyBidirectionalCollection: SequenceOfOptionalInt16 where Element == Int16? {}
extension AnyBidirectionalCollection: CollectionOfOptionalInt16 where Element == Int16? {}
extension AnyBidirectionalCollection: SequenceOfInt32 where Element == Int32 {}
extension AnyBidirectionalCollection: CollectionOfInt32 where Element == Int32 {}
extension AnyBidirectionalCollection: SequenceOfOptionalInt32 where Element == Int32? {}
extension AnyBidirectionalCollection: CollectionOfOptionalInt32 where Element == Int32? {}
extension AnyBidirectionalCollection: SequenceOfInt64 where Element == Int64 {}
extension AnyBidirectionalCollection: CollectionOfInt64 where Element == Int64 {}
extension AnyBidirectionalCollection: SequenceOfOptionalInt64 where Element == Int64? {}
extension AnyBidirectionalCollection: CollectionOfOptionalInt64 where Element == Int64? {}
extension AnyBidirectionalCollection: SequenceOfInt8 where Element == Int8 {}
extension AnyBidirectionalCollection: CollectionOfInt8 where Element == Int8 {}
extension AnyBidirectionalCollection: SequenceOfOptionalInt8 where Element == Int8? {}
extension AnyBidirectionalCollection: CollectionOfOptionalInt8 where Element == Int8? {}
extension AnyBidirectionalCollection: SequenceOfString where Element == String {}
extension AnyBidirectionalCollection: CollectionOfString where Element == String {}
extension AnyBidirectionalCollection: SequenceOfOptionalString where Element == String? {}
extension AnyBidirectionalCollection: CollectionOfOptionalString where Element == String? {}
extension AnyBidirectionalCollection: SequenceOfSubstring where Element == Substring {}
extension AnyBidirectionalCollection: CollectionOfSubstring where Element == Substring {}
extension AnyBidirectionalCollection: SequenceOfOptionalSubstring where Element == Substring? {}
extension AnyBidirectionalCollection: CollectionOfOptionalSubstring where Element == Substring? {}
extension AnyBidirectionalCollection: SequenceOfUInt where Element == UInt {}
extension AnyBidirectionalCollection: CollectionOfUInt where Element == UInt {}
extension AnyBidirectionalCollection: SequenceOfOptionalUInt where Element == UInt? {}
extension AnyBidirectionalCollection: CollectionOfOptionalUInt where Element == UInt? {}
extension AnyBidirectionalCollection: SequenceOfUInt16 where Element == UInt16 {}
extension AnyBidirectionalCollection: CollectionOfUInt16 where Element == UInt16 {}
extension AnyBidirectionalCollection: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension AnyBidirectionalCollection: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension AnyBidirectionalCollection: SequenceOfUInt32 where Element == UInt32 {}
extension AnyBidirectionalCollection: CollectionOfUInt32 where Element == UInt32 {}
extension AnyBidirectionalCollection: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension AnyBidirectionalCollection: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension AnyBidirectionalCollection: SequenceOfUInt64 where Element == UInt64 {}
extension AnyBidirectionalCollection: CollectionOfUInt64 where Element == UInt64 {}
extension AnyBidirectionalCollection: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension AnyBidirectionalCollection: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension AnyBidirectionalCollection: SequenceOfUInt8 where Element == UInt8 {}
extension AnyBidirectionalCollection: CollectionOfUInt8 where Element == UInt8 {}
extension AnyBidirectionalCollection: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension AnyBidirectionalCollection: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension AnyCollection: SequenceOfBool where Element == Bool {}
extension AnyCollection: CollectionOfBool where Element == Bool {}
extension AnyCollection: SequenceOfOptionalBool where Element == Bool? {}
extension AnyCollection: CollectionOfOptionalBool where Element == Bool? {}
extension AnyCollection: SequenceOfDouble where Element == Double {}
extension AnyCollection: CollectionOfDouble where Element == Double {}
extension AnyCollection: SequenceOfOptionalDouble where Element == Double? {}
extension AnyCollection: CollectionOfOptionalDouble where Element == Double? {}
extension AnyCollection: SequenceOfError where Element == Error {}
extension AnyCollection: CollectionOfError where Element == Error {}
extension AnyCollection: SequenceOfOptionalError where Element == Error? {}
extension AnyCollection: CollectionOfOptionalError where Element == Error? {}
extension AnyCollection: SequenceOfFloat where Element == Float {}
extension AnyCollection: CollectionOfFloat where Element == Float {}
extension AnyCollection: SequenceOfOptionalFloat where Element == Float? {}
extension AnyCollection: CollectionOfOptionalFloat where Element == Float? {}
extension AnyCollection: SequenceOfFloat80 where Element == Float80 {}
extension AnyCollection: CollectionOfFloat80 where Element == Float80 {}
extension AnyCollection: SequenceOfOptionalFloat80 where Element == Float80? {}
extension AnyCollection: CollectionOfOptionalFloat80 where Element == Float80? {}
extension AnyCollection: SequenceOfInt where Element == Int {}
extension AnyCollection: CollectionOfInt where Element == Int {}
extension AnyCollection: SequenceOfOptionalInt where Element == Int? {}
extension AnyCollection: CollectionOfOptionalInt where Element == Int? {}
extension AnyCollection: SequenceOfInt16 where Element == Int16 {}
extension AnyCollection: CollectionOfInt16 where Element == Int16 {}
extension AnyCollection: SequenceOfOptionalInt16 where Element == Int16? {}
extension AnyCollection: CollectionOfOptionalInt16 where Element == Int16? {}
extension AnyCollection: SequenceOfInt32 where Element == Int32 {}
extension AnyCollection: CollectionOfInt32 where Element == Int32 {}
extension AnyCollection: SequenceOfOptionalInt32 where Element == Int32? {}
extension AnyCollection: CollectionOfOptionalInt32 where Element == Int32? {}
extension AnyCollection: SequenceOfInt64 where Element == Int64 {}
extension AnyCollection: CollectionOfInt64 where Element == Int64 {}
extension AnyCollection: SequenceOfOptionalInt64 where Element == Int64? {}
extension AnyCollection: CollectionOfOptionalInt64 where Element == Int64? {}
extension AnyCollection: SequenceOfInt8 where Element == Int8 {}
extension AnyCollection: CollectionOfInt8 where Element == Int8 {}
extension AnyCollection: SequenceOfOptionalInt8 where Element == Int8? {}
extension AnyCollection: CollectionOfOptionalInt8 where Element == Int8? {}
extension AnyCollection: SequenceOfString where Element == String {}
extension AnyCollection: CollectionOfString where Element == String {}
extension AnyCollection: SequenceOfOptionalString where Element == String? {}
extension AnyCollection: CollectionOfOptionalString where Element == String? {}
extension AnyCollection: SequenceOfSubstring where Element == Substring {}
extension AnyCollection: CollectionOfSubstring where Element == Substring {}
extension AnyCollection: SequenceOfOptionalSubstring where Element == Substring? {}
extension AnyCollection: CollectionOfOptionalSubstring where Element == Substring? {}
extension AnyCollection: SequenceOfUInt where Element == UInt {}
extension AnyCollection: CollectionOfUInt where Element == UInt {}
extension AnyCollection: SequenceOfOptionalUInt where Element == UInt? {}
extension AnyCollection: CollectionOfOptionalUInt where Element == UInt? {}
extension AnyCollection: SequenceOfUInt16 where Element == UInt16 {}
extension AnyCollection: CollectionOfUInt16 where Element == UInt16 {}
extension AnyCollection: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension AnyCollection: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension AnyCollection: SequenceOfUInt32 where Element == UInt32 {}
extension AnyCollection: CollectionOfUInt32 where Element == UInt32 {}
extension AnyCollection: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension AnyCollection: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension AnyCollection: SequenceOfUInt64 where Element == UInt64 {}
extension AnyCollection: CollectionOfUInt64 where Element == UInt64 {}
extension AnyCollection: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension AnyCollection: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension AnyCollection: SequenceOfUInt8 where Element == UInt8 {}
extension AnyCollection: CollectionOfUInt8 where Element == UInt8 {}
extension AnyCollection: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension AnyCollection: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension Array: SequenceOfBool where Element == Bool {}
extension Array: CollectionOfBool where Element == Bool {}
extension Array: SequenceOfOptionalBool where Element == Bool? {}
extension Array: CollectionOfOptionalBool where Element == Bool? {}
extension Array: SequenceOfDouble where Element == Double {}
extension Array: CollectionOfDouble where Element == Double {}
extension Array: SequenceOfOptionalDouble where Element == Double? {}
extension Array: CollectionOfOptionalDouble where Element == Double? {}
extension Array: SequenceOfError where Element == Error {}
extension Array: CollectionOfError where Element == Error {}
extension Array: SequenceOfOptionalError where Element == Error? {}
extension Array: CollectionOfOptionalError where Element == Error? {}
extension Array: SequenceOfFloat where Element == Float {}
extension Array: CollectionOfFloat where Element == Float {}
extension Array: SequenceOfOptionalFloat where Element == Float? {}
extension Array: CollectionOfOptionalFloat where Element == Float? {}
extension Array: SequenceOfFloat80 where Element == Float80 {}
extension Array: CollectionOfFloat80 where Element == Float80 {}
extension Array: SequenceOfOptionalFloat80 where Element == Float80? {}
extension Array: CollectionOfOptionalFloat80 where Element == Float80? {}
extension Array: SequenceOfInt where Element == Int {}
extension Array: CollectionOfInt where Element == Int {}
extension Array: SequenceOfOptionalInt where Element == Int? {}
extension Array: CollectionOfOptionalInt where Element == Int? {}
extension Array: SequenceOfInt16 where Element == Int16 {}
extension Array: CollectionOfInt16 where Element == Int16 {}
extension Array: SequenceOfOptionalInt16 where Element == Int16? {}
extension Array: CollectionOfOptionalInt16 where Element == Int16? {}
extension Array: SequenceOfInt32 where Element == Int32 {}
extension Array: CollectionOfInt32 where Element == Int32 {}
extension Array: SequenceOfOptionalInt32 where Element == Int32? {}
extension Array: CollectionOfOptionalInt32 where Element == Int32? {}
extension Array: SequenceOfInt64 where Element == Int64 {}
extension Array: CollectionOfInt64 where Element == Int64 {}
extension Array: SequenceOfOptionalInt64 where Element == Int64? {}
extension Array: CollectionOfOptionalInt64 where Element == Int64? {}
extension Array: SequenceOfInt8 where Element == Int8 {}
extension Array: CollectionOfInt8 where Element == Int8 {}
extension Array: SequenceOfOptionalInt8 where Element == Int8? {}
extension Array: CollectionOfOptionalInt8 where Element == Int8? {}
extension Array: SequenceOfString where Element == String {}
extension Array: CollectionOfString where Element == String {}
extension Array: SequenceOfOptionalString where Element == String? {}
extension Array: CollectionOfOptionalString where Element == String? {}
extension Array: SequenceOfSubstring where Element == Substring {}
extension Array: CollectionOfSubstring where Element == Substring {}
extension Array: SequenceOfOptionalSubstring where Element == Substring? {}
extension Array: CollectionOfOptionalSubstring where Element == Substring? {}
extension Array: SequenceOfUInt where Element == UInt {}
extension Array: CollectionOfUInt where Element == UInt {}
extension Array: SequenceOfOptionalUInt where Element == UInt? {}
extension Array: CollectionOfOptionalUInt where Element == UInt? {}
extension Array: SequenceOfUInt16 where Element == UInt16 {}
extension Array: CollectionOfUInt16 where Element == UInt16 {}
extension Array: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension Array: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension Array: SequenceOfUInt32 where Element == UInt32 {}
extension Array: CollectionOfUInt32 where Element == UInt32 {}
extension Array: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension Array: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension Array: SequenceOfUInt64 where Element == UInt64 {}
extension Array: CollectionOfUInt64 where Element == UInt64 {}
extension Array: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension Array: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension Array: SequenceOfUInt8 where Element == UInt8 {}
extension Array: CollectionOfUInt8 where Element == UInt8 {}
extension Array: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension Array: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension ArraySlice: SequenceOfBool where Element == Bool {}
extension ArraySlice: CollectionOfBool where Element == Bool {}
extension ArraySlice: SequenceOfOptionalBool where Element == Bool? {}
extension ArraySlice: CollectionOfOptionalBool where Element == Bool? {}
extension ArraySlice: SequenceOfDouble where Element == Double {}
extension ArraySlice: CollectionOfDouble where Element == Double {}
extension ArraySlice: SequenceOfOptionalDouble where Element == Double? {}
extension ArraySlice: CollectionOfOptionalDouble where Element == Double? {}
extension ArraySlice: SequenceOfError where Element == Error {}
extension ArraySlice: CollectionOfError where Element == Error {}
extension ArraySlice: SequenceOfOptionalError where Element == Error? {}
extension ArraySlice: CollectionOfOptionalError where Element == Error? {}
extension ArraySlice: SequenceOfFloat where Element == Float {}
extension ArraySlice: CollectionOfFloat where Element == Float {}
extension ArraySlice: SequenceOfOptionalFloat where Element == Float? {}
extension ArraySlice: CollectionOfOptionalFloat where Element == Float? {}
extension ArraySlice: SequenceOfFloat80 where Element == Float80 {}
extension ArraySlice: CollectionOfFloat80 where Element == Float80 {}
extension ArraySlice: SequenceOfOptionalFloat80 where Element == Float80? {}
extension ArraySlice: CollectionOfOptionalFloat80 where Element == Float80? {}
extension ArraySlice: SequenceOfInt where Element == Int {}
extension ArraySlice: CollectionOfInt where Element == Int {}
extension ArraySlice: SequenceOfOptionalInt where Element == Int? {}
extension ArraySlice: CollectionOfOptionalInt where Element == Int? {}
extension ArraySlice: SequenceOfInt16 where Element == Int16 {}
extension ArraySlice: CollectionOfInt16 where Element == Int16 {}
extension ArraySlice: SequenceOfOptionalInt16 where Element == Int16? {}
extension ArraySlice: CollectionOfOptionalInt16 where Element == Int16? {}
extension ArraySlice: SequenceOfInt32 where Element == Int32 {}
extension ArraySlice: CollectionOfInt32 where Element == Int32 {}
extension ArraySlice: SequenceOfOptionalInt32 where Element == Int32? {}
extension ArraySlice: CollectionOfOptionalInt32 where Element == Int32? {}
extension ArraySlice: SequenceOfInt64 where Element == Int64 {}
extension ArraySlice: CollectionOfInt64 where Element == Int64 {}
extension ArraySlice: SequenceOfOptionalInt64 where Element == Int64? {}
extension ArraySlice: CollectionOfOptionalInt64 where Element == Int64? {}
extension ArraySlice: SequenceOfInt8 where Element == Int8 {}
extension ArraySlice: CollectionOfInt8 where Element == Int8 {}
extension ArraySlice: SequenceOfOptionalInt8 where Element == Int8? {}
extension ArraySlice: CollectionOfOptionalInt8 where Element == Int8? {}
extension ArraySlice: SequenceOfString where Element == String {}
extension ArraySlice: CollectionOfString where Element == String {}
extension ArraySlice: SequenceOfOptionalString where Element == String? {}
extension ArraySlice: CollectionOfOptionalString where Element == String? {}
extension ArraySlice: SequenceOfSubstring where Element == Substring {}
extension ArraySlice: CollectionOfSubstring where Element == Substring {}
extension ArraySlice: SequenceOfOptionalSubstring where Element == Substring? {}
extension ArraySlice: CollectionOfOptionalSubstring where Element == Substring? {}
extension ArraySlice: SequenceOfUInt where Element == UInt {}
extension ArraySlice: CollectionOfUInt where Element == UInt {}
extension ArraySlice: SequenceOfOptionalUInt where Element == UInt? {}
extension ArraySlice: CollectionOfOptionalUInt where Element == UInt? {}
extension ArraySlice: SequenceOfUInt16 where Element == UInt16 {}
extension ArraySlice: CollectionOfUInt16 where Element == UInt16 {}
extension ArraySlice: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension ArraySlice: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension ArraySlice: SequenceOfUInt32 where Element == UInt32 {}
extension ArraySlice: CollectionOfUInt32 where Element == UInt32 {}
extension ArraySlice: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension ArraySlice: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension ArraySlice: SequenceOfUInt64 where Element == UInt64 {}
extension ArraySlice: CollectionOfUInt64 where Element == UInt64 {}
extension ArraySlice: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension ArraySlice: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension ArraySlice: SequenceOfUInt8 where Element == UInt8 {}
extension ArraySlice: CollectionOfUInt8 where Element == UInt8 {}
extension ArraySlice: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension ArraySlice: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension CollectionOfOne: SequenceOfBool where Element == Bool {}
extension CollectionOfOne: CollectionOfBool where Element == Bool {}
extension CollectionOfOne: SequenceOfOptionalBool where Element == Bool? {}
extension CollectionOfOne: CollectionOfOptionalBool where Element == Bool? {}
extension CollectionOfOne: SequenceOfDouble where Element == Double {}
extension CollectionOfOne: CollectionOfDouble where Element == Double {}
extension CollectionOfOne: SequenceOfOptionalDouble where Element == Double? {}
extension CollectionOfOne: CollectionOfOptionalDouble where Element == Double? {}
extension CollectionOfOne: SequenceOfError where Element == Error {}
extension CollectionOfOne: CollectionOfError where Element == Error {}
extension CollectionOfOne: SequenceOfOptionalError where Element == Error? {}
extension CollectionOfOne: CollectionOfOptionalError where Element == Error? {}
extension CollectionOfOne: SequenceOfFloat where Element == Float {}
extension CollectionOfOne: CollectionOfFloat where Element == Float {}
extension CollectionOfOne: SequenceOfOptionalFloat where Element == Float? {}
extension CollectionOfOne: CollectionOfOptionalFloat where Element == Float? {}
extension CollectionOfOne: SequenceOfFloat80 where Element == Float80 {}
extension CollectionOfOne: CollectionOfFloat80 where Element == Float80 {}
extension CollectionOfOne: SequenceOfOptionalFloat80 where Element == Float80? {}
extension CollectionOfOne: CollectionOfOptionalFloat80 where Element == Float80? {}
extension CollectionOfOne: SequenceOfInt where Element == Int {}
extension CollectionOfOne: CollectionOfInt where Element == Int {}
extension CollectionOfOne: SequenceOfOptionalInt where Element == Int? {}
extension CollectionOfOne: CollectionOfOptionalInt where Element == Int? {}
extension CollectionOfOne: SequenceOfInt16 where Element == Int16 {}
extension CollectionOfOne: CollectionOfInt16 where Element == Int16 {}
extension CollectionOfOne: SequenceOfOptionalInt16 where Element == Int16? {}
extension CollectionOfOne: CollectionOfOptionalInt16 where Element == Int16? {}
extension CollectionOfOne: SequenceOfInt32 where Element == Int32 {}
extension CollectionOfOne: CollectionOfInt32 where Element == Int32 {}
extension CollectionOfOne: SequenceOfOptionalInt32 where Element == Int32? {}
extension CollectionOfOne: CollectionOfOptionalInt32 where Element == Int32? {}
extension CollectionOfOne: SequenceOfInt64 where Element == Int64 {}
extension CollectionOfOne: CollectionOfInt64 where Element == Int64 {}
extension CollectionOfOne: SequenceOfOptionalInt64 where Element == Int64? {}
extension CollectionOfOne: CollectionOfOptionalInt64 where Element == Int64? {}
extension CollectionOfOne: SequenceOfInt8 where Element == Int8 {}
extension CollectionOfOne: CollectionOfInt8 where Element == Int8 {}
extension CollectionOfOne: SequenceOfOptionalInt8 where Element == Int8? {}
extension CollectionOfOne: CollectionOfOptionalInt8 where Element == Int8? {}
extension CollectionOfOne: SequenceOfString where Element == String {}
extension CollectionOfOne: CollectionOfString where Element == String {}
extension CollectionOfOne: SequenceOfOptionalString where Element == String? {}
extension CollectionOfOne: CollectionOfOptionalString where Element == String? {}
extension CollectionOfOne: SequenceOfSubstring where Element == Substring {}
extension CollectionOfOne: CollectionOfSubstring where Element == Substring {}
extension CollectionOfOne: SequenceOfOptionalSubstring where Element == Substring? {}
extension CollectionOfOne: CollectionOfOptionalSubstring where Element == Substring? {}
extension CollectionOfOne: SequenceOfUInt where Element == UInt {}
extension CollectionOfOne: CollectionOfUInt where Element == UInt {}
extension CollectionOfOne: SequenceOfOptionalUInt where Element == UInt? {}
extension CollectionOfOne: CollectionOfOptionalUInt where Element == UInt? {}
extension CollectionOfOne: SequenceOfUInt16 where Element == UInt16 {}
extension CollectionOfOne: CollectionOfUInt16 where Element == UInt16 {}
extension CollectionOfOne: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension CollectionOfOne: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension CollectionOfOne: SequenceOfUInt32 where Element == UInt32 {}
extension CollectionOfOne: CollectionOfUInt32 where Element == UInt32 {}
extension CollectionOfOne: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension CollectionOfOne: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension CollectionOfOne: SequenceOfUInt64 where Element == UInt64 {}
extension CollectionOfOne: CollectionOfUInt64 where Element == UInt64 {}
extension CollectionOfOne: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension CollectionOfOne: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension CollectionOfOne: SequenceOfUInt8 where Element == UInt8 {}
extension CollectionOfOne: CollectionOfUInt8 where Element == UInt8 {}
extension CollectionOfOne: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension CollectionOfOne: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension ContiguousArray: SequenceOfBool where Element == Bool {}
extension ContiguousArray: CollectionOfBool where Element == Bool {}
extension ContiguousArray: SequenceOfOptionalBool where Element == Bool? {}
extension ContiguousArray: CollectionOfOptionalBool where Element == Bool? {}
extension ContiguousArray: SequenceOfDouble where Element == Double {}
extension ContiguousArray: CollectionOfDouble where Element == Double {}
extension ContiguousArray: SequenceOfOptionalDouble where Element == Double? {}
extension ContiguousArray: CollectionOfOptionalDouble where Element == Double? {}
extension ContiguousArray: SequenceOfError where Element == Error {}
extension ContiguousArray: CollectionOfError where Element == Error {}
extension ContiguousArray: SequenceOfOptionalError where Element == Error? {}
extension ContiguousArray: CollectionOfOptionalError where Element == Error? {}
extension ContiguousArray: SequenceOfFloat where Element == Float {}
extension ContiguousArray: CollectionOfFloat where Element == Float {}
extension ContiguousArray: SequenceOfOptionalFloat where Element == Float? {}
extension ContiguousArray: CollectionOfOptionalFloat where Element == Float? {}
extension ContiguousArray: SequenceOfFloat80 where Element == Float80 {}
extension ContiguousArray: CollectionOfFloat80 where Element == Float80 {}
extension ContiguousArray: SequenceOfOptionalFloat80 where Element == Float80? {}
extension ContiguousArray: CollectionOfOptionalFloat80 where Element == Float80? {}
extension ContiguousArray: SequenceOfInt where Element == Int {}
extension ContiguousArray: CollectionOfInt where Element == Int {}
extension ContiguousArray: SequenceOfOptionalInt where Element == Int? {}
extension ContiguousArray: CollectionOfOptionalInt where Element == Int? {}
extension ContiguousArray: SequenceOfInt16 where Element == Int16 {}
extension ContiguousArray: CollectionOfInt16 where Element == Int16 {}
extension ContiguousArray: SequenceOfOptionalInt16 where Element == Int16? {}
extension ContiguousArray: CollectionOfOptionalInt16 where Element == Int16? {}
extension ContiguousArray: SequenceOfInt32 where Element == Int32 {}
extension ContiguousArray: CollectionOfInt32 where Element == Int32 {}
extension ContiguousArray: SequenceOfOptionalInt32 where Element == Int32? {}
extension ContiguousArray: CollectionOfOptionalInt32 where Element == Int32? {}
extension ContiguousArray: SequenceOfInt64 where Element == Int64 {}
extension ContiguousArray: CollectionOfInt64 where Element == Int64 {}
extension ContiguousArray: SequenceOfOptionalInt64 where Element == Int64? {}
extension ContiguousArray: CollectionOfOptionalInt64 where Element == Int64? {}
extension ContiguousArray: SequenceOfInt8 where Element == Int8 {}
extension ContiguousArray: CollectionOfInt8 where Element == Int8 {}
extension ContiguousArray: SequenceOfOptionalInt8 where Element == Int8? {}
extension ContiguousArray: CollectionOfOptionalInt8 where Element == Int8? {}
extension ContiguousArray: SequenceOfString where Element == String {}
extension ContiguousArray: CollectionOfString where Element == String {}
extension ContiguousArray: SequenceOfOptionalString where Element == String? {}
extension ContiguousArray: CollectionOfOptionalString where Element == String? {}
extension ContiguousArray: SequenceOfSubstring where Element == Substring {}
extension ContiguousArray: CollectionOfSubstring where Element == Substring {}
extension ContiguousArray: SequenceOfOptionalSubstring where Element == Substring? {}
extension ContiguousArray: CollectionOfOptionalSubstring where Element == Substring? {}
extension ContiguousArray: SequenceOfUInt where Element == UInt {}
extension ContiguousArray: CollectionOfUInt where Element == UInt {}
extension ContiguousArray: SequenceOfOptionalUInt where Element == UInt? {}
extension ContiguousArray: CollectionOfOptionalUInt where Element == UInt? {}
extension ContiguousArray: SequenceOfUInt16 where Element == UInt16 {}
extension ContiguousArray: CollectionOfUInt16 where Element == UInt16 {}
extension ContiguousArray: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension ContiguousArray: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension ContiguousArray: SequenceOfUInt32 where Element == UInt32 {}
extension ContiguousArray: CollectionOfUInt32 where Element == UInt32 {}
extension ContiguousArray: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension ContiguousArray: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension ContiguousArray: SequenceOfUInt64 where Element == UInt64 {}
extension ContiguousArray: CollectionOfUInt64 where Element == UInt64 {}
extension ContiguousArray: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension ContiguousArray: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension ContiguousArray: SequenceOfUInt8 where Element == UInt8 {}
extension ContiguousArray: CollectionOfUInt8 where Element == UInt8 {}
extension ContiguousArray: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension ContiguousArray: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension Dictionary.Values: SequenceOfBool where Element == Bool {}
extension Dictionary.Values: CollectionOfBool where Element == Bool {}
extension Dictionary.Values: SequenceOfOptionalBool where Element == Bool? {}
extension Dictionary.Values: CollectionOfOptionalBool where Element == Bool? {}
extension Dictionary.Values: SequenceOfDouble where Element == Double {}
extension Dictionary.Values: CollectionOfDouble where Element == Double {}
extension Dictionary.Values: SequenceOfOptionalDouble where Element == Double? {}
extension Dictionary.Values: CollectionOfOptionalDouble where Element == Double? {}
extension Dictionary.Values: SequenceOfError where Element == Error {}
extension Dictionary.Values: CollectionOfError where Element == Error {}
extension Dictionary.Values: SequenceOfOptionalError where Element == Error? {}
extension Dictionary.Values: CollectionOfOptionalError where Element == Error? {}
extension Dictionary.Values: SequenceOfFloat where Element == Float {}
extension Dictionary.Values: CollectionOfFloat where Element == Float {}
extension Dictionary.Values: SequenceOfOptionalFloat where Element == Float? {}
extension Dictionary.Values: CollectionOfOptionalFloat where Element == Float? {}
extension Dictionary.Values: SequenceOfFloat80 where Element == Float80 {}
extension Dictionary.Values: CollectionOfFloat80 where Element == Float80 {}
extension Dictionary.Values: SequenceOfOptionalFloat80 where Element == Float80? {}
extension Dictionary.Values: CollectionOfOptionalFloat80 where Element == Float80? {}
extension Dictionary.Values: SequenceOfInt where Element == Int {}
extension Dictionary.Values: CollectionOfInt where Element == Int {}
extension Dictionary.Values: SequenceOfOptionalInt where Element == Int? {}
extension Dictionary.Values: CollectionOfOptionalInt where Element == Int? {}
extension Dictionary.Values: SequenceOfInt16 where Element == Int16 {}
extension Dictionary.Values: CollectionOfInt16 where Element == Int16 {}
extension Dictionary.Values: SequenceOfOptionalInt16 where Element == Int16? {}
extension Dictionary.Values: CollectionOfOptionalInt16 where Element == Int16? {}
extension Dictionary.Values: SequenceOfInt32 where Element == Int32 {}
extension Dictionary.Values: CollectionOfInt32 where Element == Int32 {}
extension Dictionary.Values: SequenceOfOptionalInt32 where Element == Int32? {}
extension Dictionary.Values: CollectionOfOptionalInt32 where Element == Int32? {}
extension Dictionary.Values: SequenceOfInt64 where Element == Int64 {}
extension Dictionary.Values: CollectionOfInt64 where Element == Int64 {}
extension Dictionary.Values: SequenceOfOptionalInt64 where Element == Int64? {}
extension Dictionary.Values: CollectionOfOptionalInt64 where Element == Int64? {}
extension Dictionary.Values: SequenceOfInt8 where Element == Int8 {}
extension Dictionary.Values: CollectionOfInt8 where Element == Int8 {}
extension Dictionary.Values: SequenceOfOptionalInt8 where Element == Int8? {}
extension Dictionary.Values: CollectionOfOptionalInt8 where Element == Int8? {}
extension Dictionary.Values: SequenceOfString where Element == String {}
extension Dictionary.Values: CollectionOfString where Element == String {}
extension Dictionary.Values: SequenceOfOptionalString where Element == String? {}
extension Dictionary.Values: CollectionOfOptionalString where Element == String? {}
extension Dictionary.Values: SequenceOfSubstring where Element == Substring {}
extension Dictionary.Values: CollectionOfSubstring where Element == Substring {}
extension Dictionary.Values: SequenceOfOptionalSubstring where Element == Substring? {}
extension Dictionary.Values: CollectionOfOptionalSubstring where Element == Substring? {}
extension Dictionary.Values: SequenceOfUInt where Element == UInt {}
extension Dictionary.Values: CollectionOfUInt where Element == UInt {}
extension Dictionary.Values: SequenceOfOptionalUInt where Element == UInt? {}
extension Dictionary.Values: CollectionOfOptionalUInt where Element == UInt? {}
extension Dictionary.Values: SequenceOfUInt16 where Element == UInt16 {}
extension Dictionary.Values: CollectionOfUInt16 where Element == UInt16 {}
extension Dictionary.Values: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension Dictionary.Values: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension Dictionary.Values: SequenceOfUInt32 where Element == UInt32 {}
extension Dictionary.Values: CollectionOfUInt32 where Element == UInt32 {}
extension Dictionary.Values: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension Dictionary.Values: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension Dictionary.Values: SequenceOfUInt64 where Element == UInt64 {}
extension Dictionary.Values: CollectionOfUInt64 where Element == UInt64 {}
extension Dictionary.Values: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension Dictionary.Values: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension Dictionary.Values: SequenceOfUInt8 where Element == UInt8 {}
extension Dictionary.Values: CollectionOfUInt8 where Element == UInt8 {}
extension Dictionary.Values: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension Dictionary.Values: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension EmptyCollection: SequenceOfBool where Element == Bool {}
extension EmptyCollection: CollectionOfBool where Element == Bool {}
extension EmptyCollection: SequenceOfOptionalBool where Element == Bool? {}
extension EmptyCollection: CollectionOfOptionalBool where Element == Bool? {}
extension EmptyCollection: SequenceOfDouble where Element == Double {}
extension EmptyCollection: CollectionOfDouble where Element == Double {}
extension EmptyCollection: SequenceOfOptionalDouble where Element == Double? {}
extension EmptyCollection: CollectionOfOptionalDouble where Element == Double? {}
extension EmptyCollection: SequenceOfError where Element == Error {}
extension EmptyCollection: CollectionOfError where Element == Error {}
extension EmptyCollection: SequenceOfOptionalError where Element == Error? {}
extension EmptyCollection: CollectionOfOptionalError where Element == Error? {}
extension EmptyCollection: SequenceOfFloat where Element == Float {}
extension EmptyCollection: CollectionOfFloat where Element == Float {}
extension EmptyCollection: SequenceOfOptionalFloat where Element == Float? {}
extension EmptyCollection: CollectionOfOptionalFloat where Element == Float? {}
extension EmptyCollection: SequenceOfFloat80 where Element == Float80 {}
extension EmptyCollection: CollectionOfFloat80 where Element == Float80 {}
extension EmptyCollection: SequenceOfOptionalFloat80 where Element == Float80? {}
extension EmptyCollection: CollectionOfOptionalFloat80 where Element == Float80? {}
extension EmptyCollection: SequenceOfInt where Element == Int {}
extension EmptyCollection: CollectionOfInt where Element == Int {}
extension EmptyCollection: SequenceOfOptionalInt where Element == Int? {}
extension EmptyCollection: CollectionOfOptionalInt where Element == Int? {}
extension EmptyCollection: SequenceOfInt16 where Element == Int16 {}
extension EmptyCollection: CollectionOfInt16 where Element == Int16 {}
extension EmptyCollection: SequenceOfOptionalInt16 where Element == Int16? {}
extension EmptyCollection: CollectionOfOptionalInt16 where Element == Int16? {}
extension EmptyCollection: SequenceOfInt32 where Element == Int32 {}
extension EmptyCollection: CollectionOfInt32 where Element == Int32 {}
extension EmptyCollection: SequenceOfOptionalInt32 where Element == Int32? {}
extension EmptyCollection: CollectionOfOptionalInt32 where Element == Int32? {}
extension EmptyCollection: SequenceOfInt64 where Element == Int64 {}
extension EmptyCollection: CollectionOfInt64 where Element == Int64 {}
extension EmptyCollection: SequenceOfOptionalInt64 where Element == Int64? {}
extension EmptyCollection: CollectionOfOptionalInt64 where Element == Int64? {}
extension EmptyCollection: SequenceOfInt8 where Element == Int8 {}
extension EmptyCollection: CollectionOfInt8 where Element == Int8 {}
extension EmptyCollection: SequenceOfOptionalInt8 where Element == Int8? {}
extension EmptyCollection: CollectionOfOptionalInt8 where Element == Int8? {}
extension EmptyCollection: SequenceOfString where Element == String {}
extension EmptyCollection: CollectionOfString where Element == String {}
extension EmptyCollection: SequenceOfOptionalString where Element == String? {}
extension EmptyCollection: CollectionOfOptionalString where Element == String? {}
extension EmptyCollection: SequenceOfSubstring where Element == Substring {}
extension EmptyCollection: CollectionOfSubstring where Element == Substring {}
extension EmptyCollection: SequenceOfOptionalSubstring where Element == Substring? {}
extension EmptyCollection: CollectionOfOptionalSubstring where Element == Substring? {}
extension EmptyCollection: SequenceOfUInt where Element == UInt {}
extension EmptyCollection: CollectionOfUInt where Element == UInt {}
extension EmptyCollection: SequenceOfOptionalUInt where Element == UInt? {}
extension EmptyCollection: CollectionOfOptionalUInt where Element == UInt? {}
extension EmptyCollection: SequenceOfUInt16 where Element == UInt16 {}
extension EmptyCollection: CollectionOfUInt16 where Element == UInt16 {}
extension EmptyCollection: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension EmptyCollection: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension EmptyCollection: SequenceOfUInt32 where Element == UInt32 {}
extension EmptyCollection: CollectionOfUInt32 where Element == UInt32 {}
extension EmptyCollection: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension EmptyCollection: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension EmptyCollection: SequenceOfUInt64 where Element == UInt64 {}
extension EmptyCollection: CollectionOfUInt64 where Element == UInt64 {}
extension EmptyCollection: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension EmptyCollection: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension EmptyCollection: SequenceOfUInt8 where Element == UInt8 {}
extension EmptyCollection: CollectionOfUInt8 where Element == UInt8 {}
extension EmptyCollection: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension EmptyCollection: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension ReversedCollection: SequenceOfBool where Element == Bool {}
extension ReversedCollection: CollectionOfBool where Element == Bool {}
extension ReversedCollection: SequenceOfOptionalBool where Element == Bool? {}
extension ReversedCollection: CollectionOfOptionalBool where Element == Bool? {}
extension ReversedCollection: SequenceOfDouble where Element == Double {}
extension ReversedCollection: CollectionOfDouble where Element == Double {}
extension ReversedCollection: SequenceOfOptionalDouble where Element == Double? {}
extension ReversedCollection: CollectionOfOptionalDouble where Element == Double? {}
extension ReversedCollection: SequenceOfError where Element == Error {}
extension ReversedCollection: CollectionOfError where Element == Error {}
extension ReversedCollection: SequenceOfOptionalError where Element == Error? {}
extension ReversedCollection: CollectionOfOptionalError where Element == Error? {}
extension ReversedCollection: SequenceOfFloat where Element == Float {}
extension ReversedCollection: CollectionOfFloat where Element == Float {}
extension ReversedCollection: SequenceOfOptionalFloat where Element == Float? {}
extension ReversedCollection: CollectionOfOptionalFloat where Element == Float? {}
extension ReversedCollection: SequenceOfFloat80 where Element == Float80 {}
extension ReversedCollection: CollectionOfFloat80 where Element == Float80 {}
extension ReversedCollection: SequenceOfOptionalFloat80 where Element == Float80? {}
extension ReversedCollection: CollectionOfOptionalFloat80 where Element == Float80? {}
extension ReversedCollection: SequenceOfInt where Element == Int {}
extension ReversedCollection: CollectionOfInt where Element == Int {}
extension ReversedCollection: SequenceOfOptionalInt where Element == Int? {}
extension ReversedCollection: CollectionOfOptionalInt where Element == Int? {}
extension ReversedCollection: SequenceOfInt16 where Element == Int16 {}
extension ReversedCollection: CollectionOfInt16 where Element == Int16 {}
extension ReversedCollection: SequenceOfOptionalInt16 where Element == Int16? {}
extension ReversedCollection: CollectionOfOptionalInt16 where Element == Int16? {}
extension ReversedCollection: SequenceOfInt32 where Element == Int32 {}
extension ReversedCollection: CollectionOfInt32 where Element == Int32 {}
extension ReversedCollection: SequenceOfOptionalInt32 where Element == Int32? {}
extension ReversedCollection: CollectionOfOptionalInt32 where Element == Int32? {}
extension ReversedCollection: SequenceOfInt64 where Element == Int64 {}
extension ReversedCollection: CollectionOfInt64 where Element == Int64 {}
extension ReversedCollection: SequenceOfOptionalInt64 where Element == Int64? {}
extension ReversedCollection: CollectionOfOptionalInt64 where Element == Int64? {}
extension ReversedCollection: SequenceOfInt8 where Element == Int8 {}
extension ReversedCollection: CollectionOfInt8 where Element == Int8 {}
extension ReversedCollection: SequenceOfOptionalInt8 where Element == Int8? {}
extension ReversedCollection: CollectionOfOptionalInt8 where Element == Int8? {}
extension ReversedCollection: SequenceOfString where Element == String {}
extension ReversedCollection: CollectionOfString where Element == String {}
extension ReversedCollection: SequenceOfOptionalString where Element == String? {}
extension ReversedCollection: CollectionOfOptionalString where Element == String? {}
extension ReversedCollection: SequenceOfSubstring where Element == Substring {}
extension ReversedCollection: CollectionOfSubstring where Element == Substring {}
extension ReversedCollection: SequenceOfOptionalSubstring where Element == Substring? {}
extension ReversedCollection: CollectionOfOptionalSubstring where Element == Substring? {}
extension ReversedCollection: SequenceOfUInt where Element == UInt {}
extension ReversedCollection: CollectionOfUInt where Element == UInt {}
extension ReversedCollection: SequenceOfOptionalUInt where Element == UInt? {}
extension ReversedCollection: CollectionOfOptionalUInt where Element == UInt? {}
extension ReversedCollection: SequenceOfUInt16 where Element == UInt16 {}
extension ReversedCollection: CollectionOfUInt16 where Element == UInt16 {}
extension ReversedCollection: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension ReversedCollection: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension ReversedCollection: SequenceOfUInt32 where Element == UInt32 {}
extension ReversedCollection: CollectionOfUInt32 where Element == UInt32 {}
extension ReversedCollection: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension ReversedCollection: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension ReversedCollection: SequenceOfUInt64 where Element == UInt64 {}
extension ReversedCollection: CollectionOfUInt64 where Element == UInt64 {}
extension ReversedCollection: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension ReversedCollection: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension ReversedCollection: SequenceOfUInt8 where Element == UInt8 {}
extension ReversedCollection: CollectionOfUInt8 where Element == UInt8 {}
extension ReversedCollection: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension ReversedCollection: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension Set: SequenceOfBool where Element == Bool {}
extension Set: CollectionOfBool where Element == Bool {}
extension Set: SequenceOfOptionalBool where Element == Bool? {}
extension Set: CollectionOfOptionalBool where Element == Bool? {}
extension Set: SequenceOfDouble where Element == Double {}
extension Set: CollectionOfDouble where Element == Double {}
extension Set: SequenceOfOptionalDouble where Element == Double? {}
extension Set: CollectionOfOptionalDouble where Element == Double? {}
extension Set: SequenceOfFloat where Element == Float {}
extension Set: CollectionOfFloat where Element == Float {}
extension Set: SequenceOfOptionalFloat where Element == Float? {}
extension Set: CollectionOfOptionalFloat where Element == Float? {}
extension Set: SequenceOfFloat80 where Element == Float80 {}
extension Set: CollectionOfFloat80 where Element == Float80 {}
extension Set: SequenceOfOptionalFloat80 where Element == Float80? {}
extension Set: CollectionOfOptionalFloat80 where Element == Float80? {}
extension Set: SequenceOfInt where Element == Int {}
extension Set: CollectionOfInt where Element == Int {}
extension Set: SequenceOfOptionalInt where Element == Int? {}
extension Set: CollectionOfOptionalInt where Element == Int? {}
extension Set: SequenceOfInt16 where Element == Int16 {}
extension Set: CollectionOfInt16 where Element == Int16 {}
extension Set: SequenceOfOptionalInt16 where Element == Int16? {}
extension Set: CollectionOfOptionalInt16 where Element == Int16? {}
extension Set: SequenceOfInt32 where Element == Int32 {}
extension Set: CollectionOfInt32 where Element == Int32 {}
extension Set: SequenceOfOptionalInt32 where Element == Int32? {}
extension Set: CollectionOfOptionalInt32 where Element == Int32? {}
extension Set: SequenceOfInt64 where Element == Int64 {}
extension Set: CollectionOfInt64 where Element == Int64 {}
extension Set: SequenceOfOptionalInt64 where Element == Int64? {}
extension Set: CollectionOfOptionalInt64 where Element == Int64? {}
extension Set: SequenceOfInt8 where Element == Int8 {}
extension Set: CollectionOfInt8 where Element == Int8 {}
extension Set: SequenceOfOptionalInt8 where Element == Int8? {}
extension Set: CollectionOfOptionalInt8 where Element == Int8? {}
extension Set: SequenceOfString where Element == String {}
extension Set: CollectionOfString where Element == String {}
extension Set: SequenceOfOptionalString where Element == String? {}
extension Set: CollectionOfOptionalString where Element == String? {}
extension Set: SequenceOfSubstring where Element == Substring {}
extension Set: CollectionOfSubstring where Element == Substring {}
extension Set: SequenceOfOptionalSubstring where Element == Substring? {}
extension Set: CollectionOfOptionalSubstring where Element == Substring? {}
extension Set: SequenceOfUInt where Element == UInt {}
extension Set: CollectionOfUInt where Element == UInt {}
extension Set: SequenceOfOptionalUInt where Element == UInt? {}
extension Set: CollectionOfOptionalUInt where Element == UInt? {}
extension Set: SequenceOfUInt16 where Element == UInt16 {}
extension Set: CollectionOfUInt16 where Element == UInt16 {}
extension Set: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension Set: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension Set: SequenceOfUInt32 where Element == UInt32 {}
extension Set: CollectionOfUInt32 where Element == UInt32 {}
extension Set: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension Set: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension Set: SequenceOfUInt64 where Element == UInt64 {}
extension Set: CollectionOfUInt64 where Element == UInt64 {}
extension Set: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension Set: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension Set: SequenceOfUInt8 where Element == UInt8 {}
extension Set: CollectionOfUInt8 where Element == UInt8 {}
extension Set: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension Set: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension Slice: SequenceOfBool where Element == Bool {}
extension Slice: CollectionOfBool where Element == Bool {}
extension Slice: SequenceOfOptionalBool where Element == Bool? {}
extension Slice: CollectionOfOptionalBool where Element == Bool? {}
extension Slice: SequenceOfDouble where Element == Double {}
extension Slice: CollectionOfDouble where Element == Double {}
extension Slice: SequenceOfOptionalDouble where Element == Double? {}
extension Slice: CollectionOfOptionalDouble where Element == Double? {}
extension Slice: SequenceOfError where Element == Error {}
extension Slice: CollectionOfError where Element == Error {}
extension Slice: SequenceOfOptionalError where Element == Error? {}
extension Slice: CollectionOfOptionalError where Element == Error? {}
extension Slice: SequenceOfFloat where Element == Float {}
extension Slice: CollectionOfFloat where Element == Float {}
extension Slice: SequenceOfOptionalFloat where Element == Float? {}
extension Slice: CollectionOfOptionalFloat where Element == Float? {}
extension Slice: SequenceOfFloat80 where Element == Float80 {}
extension Slice: CollectionOfFloat80 where Element == Float80 {}
extension Slice: SequenceOfOptionalFloat80 where Element == Float80? {}
extension Slice: CollectionOfOptionalFloat80 where Element == Float80? {}
extension Slice: SequenceOfInt where Element == Int {}
extension Slice: CollectionOfInt where Element == Int {}
extension Slice: SequenceOfOptionalInt where Element == Int? {}
extension Slice: CollectionOfOptionalInt where Element == Int? {}
extension Slice: SequenceOfInt16 where Element == Int16 {}
extension Slice: CollectionOfInt16 where Element == Int16 {}
extension Slice: SequenceOfOptionalInt16 where Element == Int16? {}
extension Slice: CollectionOfOptionalInt16 where Element == Int16? {}
extension Slice: SequenceOfInt32 where Element == Int32 {}
extension Slice: CollectionOfInt32 where Element == Int32 {}
extension Slice: SequenceOfOptionalInt32 where Element == Int32? {}
extension Slice: CollectionOfOptionalInt32 where Element == Int32? {}
extension Slice: SequenceOfInt64 where Element == Int64 {}
extension Slice: CollectionOfInt64 where Element == Int64 {}
extension Slice: SequenceOfOptionalInt64 where Element == Int64? {}
extension Slice: CollectionOfOptionalInt64 where Element == Int64? {}
extension Slice: SequenceOfInt8 where Element == Int8 {}
extension Slice: CollectionOfInt8 where Element == Int8 {}
extension Slice: SequenceOfOptionalInt8 where Element == Int8? {}
extension Slice: CollectionOfOptionalInt8 where Element == Int8? {}
extension Slice: SequenceOfString where Element == String {}
extension Slice: CollectionOfString where Element == String {}
extension Slice: SequenceOfOptionalString where Element == String? {}
extension Slice: CollectionOfOptionalString where Element == String? {}
extension Slice: SequenceOfSubstring where Element == Substring {}
extension Slice: CollectionOfSubstring where Element == Substring {}
extension Slice: SequenceOfOptionalSubstring where Element == Substring? {}
extension Slice: CollectionOfOptionalSubstring where Element == Substring? {}
extension Slice: SequenceOfUInt where Element == UInt {}
extension Slice: CollectionOfUInt where Element == UInt {}
extension Slice: SequenceOfOptionalUInt where Element == UInt? {}
extension Slice: CollectionOfOptionalUInt where Element == UInt? {}
extension Slice: SequenceOfUInt16 where Element == UInt16 {}
extension Slice: CollectionOfUInt16 where Element == UInt16 {}
extension Slice: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension Slice: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension Slice: SequenceOfUInt32 where Element == UInt32 {}
extension Slice: CollectionOfUInt32 where Element == UInt32 {}
extension Slice: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension Slice: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension Slice: SequenceOfUInt64 where Element == UInt64 {}
extension Slice: CollectionOfUInt64 where Element == UInt64 {}
extension Slice: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension Slice: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension Slice: SequenceOfUInt8 where Element == UInt8 {}
extension Slice: CollectionOfUInt8 where Element == UInt8 {}
extension Slice: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension Slice: CollectionOfOptionalUInt8 where Element == UInt8? {}

extension UnsafeMutableBufferPointer: SequenceOfBool where Element == Bool {}
extension UnsafeMutableBufferPointer: CollectionOfBool where Element == Bool {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalBool where Element == Bool? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalBool where Element == Bool? {}
extension UnsafeMutableBufferPointer: SequenceOfDouble where Element == Double {}
extension UnsafeMutableBufferPointer: CollectionOfDouble where Element == Double {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalDouble where Element == Double? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalDouble where Element == Double? {}
extension UnsafeMutableBufferPointer: SequenceOfError where Element == Error {}
extension UnsafeMutableBufferPointer: CollectionOfError where Element == Error {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalError where Element == Error? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalError where Element == Error? {}
extension UnsafeMutableBufferPointer: SequenceOfFloat where Element == Float {}
extension UnsafeMutableBufferPointer: CollectionOfFloat where Element == Float {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalFloat where Element == Float? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalFloat where Element == Float? {}
extension UnsafeMutableBufferPointer: SequenceOfFloat80 where Element == Float80 {}
extension UnsafeMutableBufferPointer: CollectionOfFloat80 where Element == Float80 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalFloat80 where Element == Float80? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalFloat80 where Element == Float80? {}
extension UnsafeMutableBufferPointer: SequenceOfInt where Element == Int {}
extension UnsafeMutableBufferPointer: CollectionOfInt where Element == Int {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalInt where Element == Int? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalInt where Element == Int? {}
extension UnsafeMutableBufferPointer: SequenceOfInt16 where Element == Int16 {}
extension UnsafeMutableBufferPointer: CollectionOfInt16 where Element == Int16 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalInt16 where Element == Int16? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalInt16 where Element == Int16? {}
extension UnsafeMutableBufferPointer: SequenceOfInt32 where Element == Int32 {}
extension UnsafeMutableBufferPointer: CollectionOfInt32 where Element == Int32 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalInt32 where Element == Int32? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalInt32 where Element == Int32? {}
extension UnsafeMutableBufferPointer: SequenceOfInt64 where Element == Int64 {}
extension UnsafeMutableBufferPointer: CollectionOfInt64 where Element == Int64 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalInt64 where Element == Int64? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalInt64 where Element == Int64? {}
extension UnsafeMutableBufferPointer: SequenceOfInt8 where Element == Int8 {}
extension UnsafeMutableBufferPointer: CollectionOfInt8 where Element == Int8 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalInt8 where Element == Int8? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalInt8 where Element == Int8? {}
extension UnsafeMutableBufferPointer: SequenceOfString where Element == String {}
extension UnsafeMutableBufferPointer: CollectionOfString where Element == String {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalString where Element == String? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalString where Element == String? {}
extension UnsafeMutableBufferPointer: SequenceOfSubstring where Element == Substring {}
extension UnsafeMutableBufferPointer: CollectionOfSubstring where Element == Substring {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalSubstring where Element == Substring? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalSubstring where Element == Substring? {}
extension UnsafeMutableBufferPointer: SequenceOfUInt where Element == UInt {}
extension UnsafeMutableBufferPointer: CollectionOfUInt where Element == UInt {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalUInt where Element == UInt? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalUInt where Element == UInt? {}
extension UnsafeMutableBufferPointer: SequenceOfUInt16 where Element == UInt16 {}
extension UnsafeMutableBufferPointer: CollectionOfUInt16 where Element == UInt16 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalUInt16 where Element == UInt16? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalUInt16 where Element == UInt16? {}
extension UnsafeMutableBufferPointer: SequenceOfUInt32 where Element == UInt32 {}
extension UnsafeMutableBufferPointer: CollectionOfUInt32 where Element == UInt32 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalUInt32 where Element == UInt32? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalUInt32 where Element == UInt32? {}
extension UnsafeMutableBufferPointer: SequenceOfUInt64 where Element == UInt64 {}
extension UnsafeMutableBufferPointer: CollectionOfUInt64 where Element == UInt64 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalUInt64 where Element == UInt64? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalUInt64 where Element == UInt64? {}
extension UnsafeMutableBufferPointer: SequenceOfUInt8 where Element == UInt8 {}
extension UnsafeMutableBufferPointer: CollectionOfUInt8 where Element == UInt8 {}
extension UnsafeMutableBufferPointer: SequenceOfOptionalUInt8 where Element == UInt8? {}
extension UnsafeMutableBufferPointer: CollectionOfOptionalUInt8 where Element == UInt8? {}
